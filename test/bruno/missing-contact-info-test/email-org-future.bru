meta {
  name: Test Case 2 - Org Email (email only)
  type: http
  seq: 2
}

post {
  url: {{host}}/notifications/api/v1/future/orders
  body: json
  auth: inherit
}

body:json {
  {
    "idempotencyId": "{{random_idempotency_id}}",
    "sendersReference": "{{senders_reference_guid}}",
    "requestedSendTime": "{{futureTime}}",
    "recipient": {
      "recipientOrganization": {
        "orgNumber": "{{testcase2_org_email}}",
        "channelSchema": "Email",
        "emailSettings": {
          "sendingTimePolicy": "Anytime",
          "subject": "(TEST) Email notification - Missing contact info test",
          "body": "(TEST) Email notification for organization - Missing contact info test (Env: {{Environment}} - Ref: {{random_idempotency_id}})",
          "contentType": "Plain"
        }
      }
    }
  }
}

script:pre-request {
  // Set send time to 3 minutes from now
  const futureDate = new Date(Date.now() + 2 * 60 * 1000);
  bru.setVar("futureTime", futureDate.toISOString());
}

script:post-response {
  if (res.status === 201 && res.body) {
    bru.setVar("mostRecentOrderChainId", res.body.notificationOrderId);
    bru.setVar("mostRecentShipmentId", res.body?.notification?.shipmentId);
    console.log("Order created with ID: " + res.body.notificationOrderId);
    console.log("Shipment ID: " + res.body?.notification?.shipmentId);
    console.log("Scheduled for: " + bru.getVar("futureTime"));
  }
}

docs {
  Test Case 2: Organization with email only
  
  Creates a future email notification to an organization number scheduled 3 minutes from now.
  Tests the scenario where only email contact info exists (will be deleted before send time).
  
  Uses folder variable: testcase2_org_email
  
  Expected outcome: Failed_RecipientNotIdentified (no notification sent)
}
