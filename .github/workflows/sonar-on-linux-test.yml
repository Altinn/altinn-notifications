name: sonar-on-linux-test
on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]
  workflow_dispatch:
jobs:
  analyze:
    name: Static code analysis
    runs-on: ubuntu-latest
    steps:
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: |
            7.0.x
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Install SonarCloud scanners
        run: |
          dotnet tool install --global dotnet-sonarscanner
      #- name: Cache SonarCloud scanner
      #  id: cache-sonar-scanner
      #  uses: actions/cache@v3
      #  with:
      #    path: .\.sonar\scanner
      #    key: ${{ runner.os }}-sonar-scanner
      #    restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet-sonarscanner begin /k:"Altinn_altinn-notifications" /o:"altinn" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml" /d:sonar.cpd.exclusions="src/Altinn.Notifications.Persistence/Migration/**/*.sql" /d:sonar.coverage.exclusions="src/Altinn.Notifications.Persistence/Migration/**/*.sql"

          dotnet build Altinn.Notifications.sln

          dotnet test test/Altinn.Notifications.Tests/Altinn.Notifications.Tests.csproj `
          --collect:"XPlat Code Coverage" `
          --results-directory TestResults/ `
          --logger "trx;LogFileName=unittests.trx" `
          --configuration release `
          -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover

          dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
