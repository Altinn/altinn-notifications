name: Build and deploy release

on:
  push:
    tags:
      - "*.*.*"

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.version.outputs.tag }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        working-directory: src/Altinn.Notifications
        run: dotnet build --no-restore
      - name: Test
        working-directory: test/Altinn.Notifications.Tests
        run: dotnet test
      - name: Get version from tags
        id: version
        run: echo ::set-output name=tag::${GITHUB_REF/refs\/tags\//}
  build-image:
    uses: altinn/altinn-notifications/.github/workflows/build-image.yaml@main
    needs: build
    with:
      tag: ${{ needs.build.outputs.tag }}
      push: true
  deploy-at22:
    uses: altinn/altinn-notifications/.github/workflows/deploy-image.yaml@main
    needs: [build, build-image]
    with:
      environment: at22
      tag: ${{ needs.build.outputs.tag }}
    secrets:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AKS_RESOURCEGROUP_NAME: ${{ secrets.AKS_RESOURCEGROUP_NAME }}
      AKS_CLUSTER_NAME: ${{ secrets.AKS_CLUSTER_NAME }}
      TLS_SECRET_NAME: ${{ secrets.TLS_SECRET_NAME }}
      INGRESS_HOST: ${{ secrets.INGRESS_HOST }}
      APPSETTINS_SECRET_NAME: ${{ secrets.APPSETTINS_SECRET_NAME }}
      APPSETTINGS_PATH: ${{ secrets.APPSETTINGS_PATH }}
      DB_ADMIN_CONNECTION_STRING: ${{ secrets.DB_ADMIN_CONNECTION_STRING }}
      DB_USER_CONNECTION_STRING: ${{ secrets.DB_USER_CONNECTION_STRING }}
      SMTP_HOST: ${{ secrets.SMTP_HOST }}
      SMTP_SENDER: ${{ secrets.SMTP_SENDER }}