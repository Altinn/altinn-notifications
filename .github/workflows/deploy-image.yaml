name: deploy docker image

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      tag:
        required: true
        type: string
      pullPolicy:
        required: true
        default: "IfNotPresent"
        type: string

jobs:
  docker-build:
    name: "build docker image"
    runs-on: ubuntu-latest
    environment: platform-${{ inputs.environment }}
    steps:
      - name: Setup helm
        uses: azure/setup-helm@v1
      - name: Checkout
        uses: actions/checkout@v2
      - name: "Az CLI login"
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Deploy to ${{inputs.environment}}
        run: |
          az aks get-credentials -g ${{ secrets.AKS_RESOURCEGROUP_NAME }} -n ${{ secrets.AKS_CLUSTER_NAME }}
          helm upgrade --install altinn-notifications ./chart/altinn-notifications \
            --set image.tag=${{inputs.tag}} \
            --set ingress.tls.secretName=${{secrets.TLS_SECRET_NAME}} \
            --set ingress.match.host=${{secrets.INGRESS_HOST}} \
            --set appsettings.mount=true \
            --set appsettings.secretName=${{secrets.APPSETTINS_SECRET_NAME}} \
            --set appsettings.mountPath=${{secrets.APPSETTINGS_PATH}} \
            --set postgreSQLSettings.adminConnectionString=${{secrets.DB_ADMIN_CONNECTION_STRING}} \
            --set postgreSQLSettings.userConnectionString=${{secrets.DB_USER_CONNECTION_STRING}} \
            --set image.pullPolicy=${{inputs.pullPolicy}} \
            --set smtpSettings.host=${{secrets.SMTP_HOST}} \
            --set smtpSettings.sender=${{secrets.SMTP_SENDER}}
          kubectl wait --for=condition=available --timeout=600s deployment/altinn-notifications
          helm test altinn-notifications
